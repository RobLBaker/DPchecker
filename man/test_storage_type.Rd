% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/required_eml_elements.R
\name{test_storage_type}
\alias{test_storage_type}
\title{Tests for attribute storage type}
\usage{
test_storage_type(metadata = load_metadata(directory))
}
\arguments{
\item{metadata}{The metadata object returned by \code{load_metadata}. If parameter not provided, defaults to calling \code{load_metadata} in current project directory.#'}
}
\value{
invisibly returns \code{metadata}
}
\description{
\code{test_storage_type()} checks to see if there are the same number of attributes (attributeName) and storageTypes in the metadata. Equal numbers of elements will pass; unequal will generate an error. \code{test_storage_type()} does NOT attempt to verify if the number of storageType elements matches the number of columns in the data package data files (for that functionality, use \code{test_fields_match()}). \code{test_storage_type()} does verify that the storageType is valid; i.e. is a member of an accepted list of possible storage types. Currently: string, float, date, factor, or characters. Valid is based just on ezEML/EAL output: any string in storageType is schema-valid. \code{test_storage_type()} does NOT attempt to verify that the value in storageType logically matches the type data in the corresponding column.
}
\examples{
\dontrun{
test_storage_type()
}
}
